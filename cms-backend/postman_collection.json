{
  "info": {
    "_postman_id": "your-collection-id",
    "name": "CMS API",
    "description": "Claims Management System API Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5001",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "if (response.data && response.data.user) {",
                  "    pm.collectionVariables.set('authToken', 'Bearer ' + response.data.token);",
                  "    console.log('Token saved:', response.data.token);",
                  "} else {",
                  "    console.error('Login failed:', response);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"sudo@example.com\",\n    \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login to get authentication token"
          }
        },
        {
          "name": "Register User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"role\": \"USER\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register new user (requires ADMIN or SUDO role)"
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "{{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "logout"]
            }
          },
          "response": [
            {
              "name": "Successful Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth", "logout"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "success": true,
                "message": "Logged out successfully"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Insurers",
      "item": [
        {
          "name": "Get All Insurers",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Ensure Authorization header is set",
                  "if (!pm.request.headers.has('Authorization')) {",
                  "    pm.request.headers.add({",
                  "        key: 'Authorization',",
                  "        value: pm.collectionVariables.get('authToken')",
                  "    });",
                  "}",
                  "",
                  "console.log('Headers:', pm.request.headers.toObject());",
                  "console.log('Auth Token:', pm.collectionVariables.get('authToken'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/insurers",
              "host": ["{{baseUrl}}"],
              "path": ["insurers"]
            }
          }
        },
        {
          "name": "Create Insurer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Ensure Authorization header is set",
                  "if (!pm.request.headers.has('Authorization')) {",
                  "    pm.request.headers.add({",
                  "        key: 'Authorization',",
                  "        value: pm.collectionVariables.get('authToken')",
                  "    });",
                  "}",
                  "",
                  "console.log('Headers:', pm.request.headers.toObject());",
                  "console.log('Auth Token:', pm.collectionVariables.get('authToken'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "{{authToken}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Insurance Co\",\n    \"address\": \"123 Test St\",\n    \"phone\": \"1234567890\",\n    \"billingEmail\": \"billing@test.com\",\n    \"carrierNote\": \"Test note\",\n    \"pricingRules\": {\n        \"domesticWindshield\": 100,\n        \"domesticTempered\": 80,\n        \"foreignWindshield\": 150,\n        \"foreignTempered\": 120,\n        \"oem\": 1.2,\n        \"laborType\": \"FLAT\",\n        \"laborTypeValue\": 50,\n        \"glassLaborRate\": 65,\n        \"defaultHourlyRate\": 75,\n        \"laborDomesticWindshield\": 1.5,\n        \"laborDomesticTempered\": 1,\n        \"laborForeignWindshield\": 2,\n        \"laborForeignTempered\": 1.5,\n        \"otherKitFlat\": 30,\n        \"kitFlat1\": 25,\n        \"kitFlat1_5\": 35,\n        \"kitFlat2\": 45,\n        \"kitFlat2_5\": 55,\n        \"kitFlat3\": 65\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/insurers",
              "host": ["{{baseUrl}}"],
              "path": ["insurers"]
            }
          }
        },
        {
          "name": "Update Insurer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Ensure Authorization header is set",
                  "if (!pm.request.headers.has('Authorization')) {",
                  "    pm.request.headers.add({",
                  "        key: 'Authorization',",
                  "        value: pm.collectionVariables.get('authToken')",
                  "    });",
                  "}",
                  "",
                  "console.log('Headers:', pm.request.headers.toObject());",
                  "console.log('Auth Token:', pm.collectionVariables.get('authToken'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{authToken}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Insurance Co\",\n    \"address\": \"456 Update St\",\n    \"phone\": \"0987654321\",\n    \"billingEmail\": \"new.billing@test.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/insurers/:id",
              "host": ["{{baseUrl}}"],
              "path": ["insurers", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "",
                  "description": "Insurer ID"
                }
              ]
            }
          }
        },
        {
          "name": "Delete Insurer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Ensure Authorization header is set",
                  "if (!pm.request.headers.has('Authorization')) {",
                  "    pm.request.headers.add({",
                  "        key: 'Authorization',",
                  "        value: pm.collectionVariables.get('authToken')",
                  "    });",
                  "}",
                  "",
                  "console.log('Headers:', pm.request.headers.toObject());",
                  "console.log('Auth Token:', pm.collectionVariables.get('authToken'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "{{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/insurers/:id",
              "host": ["{{baseUrl}}"],
              "path": ["insurers", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "",
                  "description": "Insurer ID"
                }
              ]
            }
          }
        }
      ]
    }
  ]
}
